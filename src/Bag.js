"use strict";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Bag {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    contains([m, n]) {
        return this[m] !== undefined && this[m][n] !== undefined;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    put([m, n], value = true) {
        if (!this[m]) {
            this[m] = {};
        }
        this[m][n] = value;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    iterate(fn) {
        for (let m in this) {
            for (let n in this[m]) {
                fn([parseInt(m), parseInt(n)]);
            }
        }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    getLength() {
        let l = 0;
        for (let m in this) {
            for (let n in this[m]) {
                l++;
            }
        }
        return l;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    toArray() {
        const arr = [];
        for (let m in this) {
            for (let n in this[m]) {
                arr.push([parseInt(m), parseInt(n)]);
            }
        }
        return arr;
    }

}

module.exports = Bag;